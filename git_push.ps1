# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–º–º–∏—Ç–∞ –∏ –ø—É—à–∞ –≤ GitHub
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\git_push.ps1 [—Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞]

param(
    [string]$CommitMessage = ""
)

function Write-ColorOutput {
    param(
        [string]$Message,
        [string]$Color = "White"
    )
    Write-Host $Message -ForegroundColor $Color
}

function Invoke-GitCommand {
    param(
        [string]$Command,
        [string]$Description
    )
    
    Write-ColorOutput "üîÑ $Description..." "Yellow"
    
    try {
        $result = Invoke-Expression $Command 2>&1
        if ($LASTEXITCODE -eq 0) {
            Write-ColorOutput "‚úÖ $Description - —É—Å–ø–µ—à–Ω–æ" "Green"
            if ($result) {
                Write-ColorOutput "   $result" "Gray"
            }
            return $true
        } else {
            Write-ColorOutput "‚ùå $Description - –æ—à–∏–±–∫–∞" "Red"
            if ($result) {
                Write-ColorOutput "   $result" "Red"
            }
            return $false
        }
    }
    catch {
        Write-ColorOutput "‚ùå $Description - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: $($_.Exception.Message)" "Red"
        return $false
    }
}

function Get-CommitMessage {
    if ($CommitMessage) {
        return $CommitMessage
    }
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    try {
        $status = git status --porcelain
        if ($status) {
            $changes = $status -split "`n"
            $modifiedFiles = $changes | Where-Object { $_ -match "^M" } | ForEach-Object { ($_ -split "\s+")[-1] }
            $newFiles = $changes | Where-Object { $_ -match "^A" } | ForEach-Object { ($_ -split "\s+")[-1] }
            
            if ($newFiles) {
                $files = $newFiles[0..2] -join ", "
                return "–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã: $files"
            }
            elseif ($modifiedFiles) {
                $files = $modifiedFiles[0..2] -join ", "
                return "–û–±–Ω–æ–≤–ª–µ–Ω—ã —Ñ–∞–π–ª—ã: $files"
            }
        }
        
        $date = Get-Date -Format "dd.MM.yyyy HH:mm"
        return "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç $date"
    }
    catch {
        $date = Get-Date -Format "dd.MM.yyyy HH:mm"
        return "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç $date"
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    Write-ColorOutput "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç –∏ –ø—É—à –≤ GitHub" "Cyan"
    Write-ColorOutput "=" * 50 "Cyan"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    if (-not (Test-Path ".git")) {
        Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π" "Red"
        return $false
    }
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
    $commitMsg = Get-CommitMessage
    Write-ColorOutput "üìù –°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: $commitMsg" "White"
    Write-Host ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    if (-not (Invoke-GitCommand "git status" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞")) {
        return $false
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if (-not (Invoke-GitCommand "git add ." "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤")) {
        return $false
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞
    $diffResult = git diff --cached --quiet
    if ($LASTEXITCODE -eq 0) {
        Write-ColorOutput "‚ÑπÔ∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞" "Blue"
        return $true
    }
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
    if (-not (Invoke-GitCommand "git commit -m `"$commitMsg`"" "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞")) {
        return $false
    }
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ç–∫–µ
    $currentBranch = git branch --show-current
    if (-not $currentBranch) {
        $currentBranch = "main"
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    $remoteResult = git remote -v
    if (-not $remoteResult) {
        Write-ColorOutput "‚ö†Ô∏è  –£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω" "Yellow"
        Write-ColorOutput "   –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:" "Yellow"
        Write-ColorOutput "   git remote add origin <URL_–≤–∞—à–µ–≥–æ_—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è>" "Yellow"
        return $false
    }
    
    # –ü—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if (-not (Invoke-GitCommand "git push origin $currentBranch" "–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ GitHub (–≤–µ—Ç–∫–∞ $currentBranch)")) {
        return $false
    }
    
    Write-Host ""
    Write-ColorOutput "üéâ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!" "Green"
    Write-ColorOutput "üìä –í–µ—Ç–∫–∞: $currentBranch" "White"
    Write-ColorOutput "üí¨ –ö–æ–º–º–∏—Ç: $commitMsg" "White"
    
    return $true
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
$success = Main
exit $(if ($success) { 0 } else { 1 })
